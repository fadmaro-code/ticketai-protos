syntax = "proto3";
package ocr;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

service Dataset {
  rpc GetOneDocument(GetOneDocumentRequest) returns (DocumentResponse) {}
  rpc GetManyDocuments(GetManyDocumentsRequest)
      returns (stream DocumentResponse) {}
  rpc GetOneDocumentInfo(GetOneDocumentInfoRequest)
      returns (DocumentInfoResponse) {}
  rpc GetManyDocumentsInfo(GetManyDocumentsInfoRequest)
      returns (stream DocumentInfoResponse) {}
  rpc GetAllDocumentsInfo(GetAllDocumentsInfoRequest)
      returns (stream DocumentInfoResponse) {}
  rpc GetOneDocumentImage(GetOneDocumentImageRequest)
      returns (DocumentImageResponse) {}
  rpc UpdateDocumentLines(UpdateDocumentLinesRequest)
      returns (UpdateDocumentLinesResponse) {}
  rpc GetOneLineCrop(GetOneLineCropRequest) returns (DocumentImageResponse) {}
  rpc GetDocumentsMetrics(GetDocumentsMetricsRequest)
      returns (DocumentsMetricsResponse) {}
}

message GetOneDocumentRequest {
  string documentUuid = 1;
  string userId = 2;
}

message GetManyDocumentsRequest {
  repeated string documentUuids = 1;
  string userId = 2;
}

message GetOneDocumentInfoRequest {
  string documentUuid = 1;
  string userId = 2;
}

message GetManyDocumentsInfoRequest {
  repeated string documentUuids = 1;
  string userId = 2;
}

message GetAllDocumentsInfoRequest {
  int32 skip = 1;
  int32 limit = 2;
  string userId = 3;
  google.protobuf.Timestamp startDate = 4;
  google.protobuf.Timestamp endDate = 5;
  bool withMatches = 6;
}

message GetOneDocumentImageRequest {
  string documentUuid = 1;
  string userId = 2;
}

message UpdateDocumentLinesRequest {
  string documentUuid = 1;
  repeated UpdateLineRequest lines = 2;
  string userId = 3;
}

message UpdateLineRequest {
  string uuid = 1;
  string text = 2;
}

message GetOneLineCropRequest {
  string documentUuid = 1;
  string lineUuid = 2;
  string userId = 3;
}

message GetDocumentsMetricsRequest {
  google.protobuf.Timestamp startDate = 1;
  google.protobuf.Timestamp endDate = 2;
  string userId = 3;
}

message DocumentsMetricsResponse {
  int32 total = 1;
  int32 matched = 2;
  int32 matched_all_fields = 3;
}

message DocumentImageResponse { string image = 1; }
message UpdateDocumentLinesResponse { int32 count = 1; }

message DocumentInfoResponse {
  string _id = 1;
  string signature = 2;
  string uuid = 3;
  string document_id = 4;
  string original_filename = 5;
  string dataset = 6;
  string client = 7;
  google.protobuf.Struct verified = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  repeated MatchResponse matches = 11;
  string user_id = 12;
}

message MatchResponse {
  string transaction_id = 1;
  string quality = 2;
}

message DocumentResponse {
  string _id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string src = 4;
  string uuid = 5;
  string signature = 6;
  repeated PageResponse pages = 7;
  string user_id = 8;
}

message PageResponse {
  string text = 1;
  float confidence = 2;
  BoundingBoxResponse bbox = 3;
  string hocr_id = 4;
  string uuid = 5;
  repeated AreaResponse areas = 6;
  string corrected_text = 7;
}

message AreaResponse {
  string text = 1;
  float confidence = 2;
  BoundingBoxResponse bbox = 3;
  string hocr_id = 4;
  string uuid = 5;
  repeated ParagraphResponse paragraphs = 6;
  string corrected_text = 7;
}

message ParagraphResponse {
  string text = 1;
  float confidence = 2;
  BoundingBoxResponse bbox = 3;
  string hocr_id = 4;
  string uuid = 5;
  repeated LineResponse lines = 6;
  string corrected_text = 7;
}

message LineResponse {
  string text = 1;
  float confidence = 2;
  BoundingBoxResponse bbox = 3;
  string hocr_id = 4;
  string uuid = 5;
  repeated WordResponse words = 6;
  string corrected_text = 7;
  int32 line_class = 8;
}

message WordResponse {
  string text = 1;
  float confidence = 2;
  BoundingBoxResponse bbox = 3;
  string hocr_id = 4;
  string uuid = 5;
  string corrected_text = 6;
}

message BoundingBoxResponse {
  PointResponse top_left = 1;
  PointResponse bottom_right = 2;
}

message PointResponse {
  int32 x = 1;
  int32 y = 2;
}